{"ast":null,"code":"var _jsxFileName = \"/Users/gabepayne/Documents/BI-Dashboard/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { fetchReports } from './api';\n// import Filter from './components/filter';\n// import ReportCard from './components/reportCard';\n// import './App.css';\n\n// function App() {\n//   const [reports, setReports] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [category, setCategory] = useState('');\n//   const [error, setError] = useState(null);\n\n//   const loadReports = () => {\n//     setLoading(true);\n//     fetchReports(category)\n//       .then((response) => {\n//         setReports(response.data);\n//         setError(null);\n//       })\n//       .catch(() => {\n//         setError('Failed to fetch reports');\n//       })\n//       .finally(() => {\n//         setLoading(false);\n//       });\n//   };\n\n//   useEffect(() => {\n//     loadReports();\n//   }, [category]);\n\n//   const uniqueCategories = [...new Set(reports.map(r => r.category))];\n\n//   return (\n//     <div className=\"contentContainer\">\n//       <h1>Reports Dashboard</h1>\n//       <Filter\n//         options={['All', ...uniqueCategories]}\n//         selected={category}\n//         onChange={(value) => setCategory(value === 'All' ? '' : value)}\n//       />\n//       {loading && <p>Loading...</p>}\n//       {error && <p>{error}</p>}\n//       <div className=\"reportCard\">\n//         {reports.map(report => (\n//           <ReportCard key={report.id} report={report} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchReports, fetchCategories } from './api'; // assume fetchCategories exists\nimport Filter from './components/filter';\nimport ReportCard from './components/reportCard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [reports, setReports] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch categories once\n    fetchCategories().then(response => setCategories(response.data)).catch(() => setError('Failed to fetch categories'));\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    fetchReports(category).then(response => {\n      setReports(response.data);\n      setError(null);\n    }).catch(() => {\n      setError('Failed to fetch reports');\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contentContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reports Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      options: ['All', ...categories],\n      selected: category,\n      onChange: value => setCategory(value === 'All' ? '' : value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reportCard\",\n      children: reports.map(report => /*#__PURE__*/_jsxDEV(ReportCard, {\n        report: report\n      }, report.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wIMsh+cl8gspNmsqPDf7ySlUXQM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchReports","fetchCategories","Filter","ReportCard","jsxDEV","_jsxDEV","App","_s","reports","setReports","categories","setCategories","loading","setLoading","category","setCategory","error","setError","then","response","data","catch","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","selected","onChange","value","map","report","id","_c","$RefreshReg$"],"sources":["/Users/gabepayne/Documents/BI-Dashboard/frontend/src/App.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from 'react';\n// import { fetchReports } from './api';\n// import Filter from './components/filter';\n// import ReportCard from './components/reportCard';\n// import './App.css';\n\n// function App() {\n//   const [reports, setReports] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [category, setCategory] = useState('');\n//   const [error, setError] = useState(null);\n\n//   const loadReports = () => {\n//     setLoading(true);\n//     fetchReports(category)\n//       .then((response) => {\n//         setReports(response.data);\n//         setError(null);\n//       })\n//       .catch(() => {\n//         setError('Failed to fetch reports');\n//       })\n//       .finally(() => {\n//         setLoading(false);\n//       });\n//   };\n\n//   useEffect(() => {\n//     loadReports();\n//   }, [category]);\n\n//   const uniqueCategories = [...new Set(reports.map(r => r.category))];\n\n//   return (\n//     <div className=\"contentContainer\">\n//       <h1>Reports Dashboard</h1>\n//       <Filter\n//         options={['All', ...uniqueCategories]}\n//         selected={category}\n//         onChange={(value) => setCategory(value === 'All' ? '' : value)}\n//       />\n//       {loading && <p>Loading...</p>}\n//       {error && <p>{error}</p>}\n//       <div className=\"reportCard\">\n//         {reports.map(report => (\n//           <ReportCard key={report.id} report={report} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchReports, fetchCategories } from './api'; // assume fetchCategories exists\nimport Filter from './components/filter';\nimport ReportCard from './components/reportCard';\nimport './App.css';\n\nfunction App() {\n  const [reports, setReports] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch categories once\n    fetchCategories()\n      .then(response => setCategories(response.data))\n      .catch(() => setError('Failed to fetch categories'));\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchReports(category)\n      .then((response) => {\n        setReports(response.data);\n        setError(null);\n      })\n      .catch(() => {\n        setError('Failed to fetch reports');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [category]);\n\n  return (\n    <div className=\"contentContainer\">\n      <h1>Reports Dashboard</h1>\n      <Filter\n        options={['All', ...categories]}\n        selected={category}\n        onChange={(value) => setCategory(value === 'All' ? '' : value)}\n      />\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <div className=\"reportCard\">\n        {reports.map(report => (\n          <ReportCard key={report.id} report={report} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}